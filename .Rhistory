knitr::opts_chunk$set(echo = TRUE)
### Liste des paquetages
liste.paquetage <- c("ggplot2", "CASdatasets")
### On installe les paquetages de la liste qu'on a pas déjà
inst <- liste.paquetage %in% installed.packages()
if(length(liste.paquetage[!inst]) > 0) install.packages(liste.paquetage[!inst])
lapply(liste.paquetage, require, character.only = TRUE)
data(brvehins1a)
Veh <- brvehins1a
Veh$ClaimNb <- Veh$ClaimNbRob + Veh$ClaimNbPartColl + Veh$ClaimNbTotColl + Veh$ClaimNbFire + Veh$ClaimNbOther
Veh$ClaimAmount <- Veh$ClaimAmountRob + Veh$ClaimAmountPartColl + Veh$ClaimAmountTotColl + Veh$ClaimAmountFire + Veh$ClaimAmountOther
# Ajustement des niveaux
levels(Veh$DrivAge) <- levels(Veh$DrivAge)[c(2, 3, 4, 5, 1)]
sum(is.na(Veh$Gender))
## Création d'une nouvelle base de donnée pour l'analyse exploratoire
VehClaimOnly <- Veh[Veh$ClaimAmount > 0, ]
VehClaimOnly$LogClaim <- log(VehClaimOnly$ClaimAmount)
sum(is.na(Veh$ClaimAmount))
sum(is.na(Veh$ClaimAmount==0))
sum(is.na(log(Veh$ClaimAmount)))
ggplot(VehClaimOnly, aes(x=LogClaim))+
geom_histogram()
ggplot(VehClaimOnly, aes(x=Gender, y=LogClaim)) +
geom_boxplot() +
ylab("Logarithme des réclamations")
ggplot(VehClaimOnly, aes(x=DrivAge, y=LogClaim)) +
geom_boxplot() +
ylab("Logarithme des réclamations")
ggplot(VehClaimOnly, aes(x=VehYear, y=LogClaim)) +
geom_point(alpha = 0.3) +
ylab("Logarithme des réclamations")
Veh <- Veh[Veh$VehYear > 1900,]
ggplot(VehClaimOnly, aes(x=VehYear, y=LogClaim)) +
geom_point(alpha = 0.3) +
ylab("Logarithme des réclamations")
Veh <- Veh[Veh$VehYear > 1900,]
## Création d'une nouvelle base de donnée pour l'analyse exploratoire
VehClaimOnly <- Veh[Veh$ClaimAmount > 0, ]
VehClaimOnly$LogClaim <- log(VehClaimOnly$ClaimAmount)
ggplot(VehClaimOnly, aes(x=VehYear, y=LogClaim)) +
geom_point(alpha = 0.3) +
ylab("Logarithme des réclamations")
sum(Veh$ClaimAmount == 0)
sum(na.omit(Veh$ClaimAmount == 0))
sum(is.na(Veh$ClaimAmount))
sum(!is.na(Veh$ClaimAmount))
NA == 0
sum(Veh$ClaimAmount[is.na(Veh$Gender)] == 0)
Veh$ClaimAmount[is.na(Veh$Gender)]
sum(na.omit(Veh$ClaimAmount[is.na(Veh$Gender)]) == 0)
sum(Veh$ClaimAmount[na.omit(Veh$Gender) == "Female"] == 0)
um(Veh$ClaimAmount[na.omit(Veh$Gender) == "Male"] == 0)
sum(Veh$ClaimAmount[na.omit(Veh$Gender) == "Male"] == 0)
Veh$ClaimAmount[na.omit(Veh$Gender) == "Male"]
Veh$ClaimAmount[na.omit(Veh$Gender) == "Male"] == 0
is.na(Veh$ClaimAmount[na.omit(Veh$Gender) == "Male"] == 0)
sum(is.na(Veh$ClaimAmount[na.omit(Veh$Gender) == "Male"] == 0))
Veh$Gender == "Corporate"
Veh$Gender[Veh$Gender == "Corporate"]
Veh$Gender[na,omit(Veh$Gender) == "Corporate"]
Veh$Gender[na.omit(Veh$Gender) == "Corporate"]
na.omit(Veh$Gender)[na.omit(Veh$Gender) == "Corporate"]
length(na.omit(Veh$Gender)[na.omit(Veh$Gender) == "Corporate"])
c(0, 5, NA, 5, 0, 10) == 0
c(0, 5, NA, 5, 0, 10)[c(0, 5, NA, 5, 0, 10) == 0]
c(0, 5, NA, 5, 0, 10)[c(0, 5, NA, 5, 0, 10) == 0]
sum(na.omit(Veh$ClaimAmount[Veh$Gender == "Corporate"]) == 0)
ggplot(VehClaimOnly, aes(x=LogClaim))+
geom_histogram()
ggplot(VehClaimOnly, aes(x=LogClaim))+
geom_histogram()
for(i in seq(length(VehClaimOnly$VehModel)))
attr(regexpr("^([a-zA-Z]|[0-9]|[-])* -", VehClaimOnly$VehModel[i]), "match.length") - 2
knitr::opts_chunk$set(echo = TRUE)
### Liste des paquetages
liste.paquetage <- c("ggplot2", "CASdatasets", "mice")
### On installe les paquetages de la liste qu'on a pas déjà
inst <- liste.paquetage %in% installed.packages()
if(length(liste.paquetage[!inst]) > 0) install.packages(liste.paquetage[!inst])
lapply(liste.paquetage, require, character.only = TRUE)
data(brvehins1a)
Veh <- brvehins1a
Veh$ClaimNb <- Veh$ClaimNbRob + Veh$ClaimNbPartColl + Veh$ClaimNbTotColl + Veh$ClaimNbFire + Veh$ClaimNbOther
Veh$ClaimAmount <- Veh$ClaimAmountRob + Veh$ClaimAmountPartColl + Veh$ClaimAmountTotColl + Veh$ClaimAmountFire + Veh$ClaimAmountOther
# Ajustement des niveaux
levels(Veh$DrivAge) <- levels(Veh$DrivAge)[c(2, 3, 4, 5, 1)]
Veh <- Veh[Veh$VehYear > 1900,]
Veh <- Veh[-8] #retirer StateAb du jeu de données
## Création d'une nouvelle base de donnée pour l'analyse exploratoire
VehClaimOnly <- Veh[Veh$ClaimAmount > 0, ]
VehClaimOnly$LogClaim <- log(VehClaimOnly$ClaimAmount)
## Création d'une nouvelle base de donnée pour l'analyse exploratoire
VehClaimOnly <- Veh[Veh$ClaimAmount > 0, ]
VehClaimOnly$LogClaim <- log(VehClaimOnly$ClaimAmount)
ggplot(VehClaimOnly, aes(x=LogClaim))+
geom_histogram()
ggplot(VehClaimOnly, aes(x=Gender, y=LogClaim)) +
geom_boxplot() +
ylab("Logarithme des réclamations")
ggplot(VehClaimOnly, aes(x=DrivAge, y=LogClaim)) +
geom_boxplot() +
ylab("Logarithme des réclamations")
ggplot(VehClaimOnly, aes(x=VehYear, y=LogClaim)) +
geom_point(alpha = 0.3) +
ylab("Logarithme des réclamations")
for(i in seq(length(VehClaimOnly$VehModel)))
attr(regexpr("^([a-zA-Z]|[0-9]|[-])* -", VehClaimOnly$VehModel[i]), "match.length") - 2
Veh$VehModel[1]
str_extract(Veh$VehModel[1], "^([a-zA-Z]|[0-9]|[-])* -")
str_extract
install.packages("stringi")
library(stringi)
install.packages("stringi")
str_extract(Veh$VehModel[1], "^([a-zA-Z]|[0-9]|[-])* -")
?stri_extract
length(levels(Veh$VehModel))
length(levels(Veh$VehGroup))
stri_extract(Veh$VehModel[1], "^([a-zA-Z]|[0-9]|[-])* -")
stri_extract(Veh$VehModel[1], regex="^([a-zA-Z]|[0-9]|[-])* -")
stri_extract(Veh$VehModel[1], regex="^([a-zA-Z]|[0-9]|[-])* -")[-2]
stri_extract(Veh$VehModel[c(1,2)], regex="^([a-zA-Z]|[0-9]|[-])* -")
stri_extract(Veh$VehModel[c(1,2)], regex="^([a-zA-Z]|[0-9]|[-])*\\ -")
sub("(^([a-zA-Z]|[0-9]|[-])*) -", "\\1", stri_extract(Veh$VehModel[c(1,2)])
)
sub("(^([a-zA-Z]|[0-9]|[-])*) -", "\\1", Veh$VehModel[c(1,2)])
sub("(\\^([a-zA-Z]|[0-9]|[-])*) -", "\\1", Veh$VehModel[c(1,2)])
?substring
gsub('.{3}$', '', stri_extract(Veh$VehModel[c(1, 2)], regex="^([a-zA-Z]|[0-9]|[-])*\\ -"))
gsub('.{2}$', '', stri_extract(Veh$VehModel[c(1, 2)], regex="^([a-zA-Z]|[0-9]|[-])*\\ -"))
gsub('.{2}$', '', stri_extract(Veh$VehModel[c(1:10)], regex="^([a-zA-Z]|[0-9]|[-])*\\ -"))
Veh$VehManuf <- gsub('.{2}$', '', stri_extract(Veh$VehModel[c(1:10)], regex="^([a-zA-Z]|[0-9]|[-])*\\ -"))
length(levels(Veh$VehManuf))
levels(Veh$VehManuf)
length(table(Veh$VehManuf))
table(Veh$VehManuf)
View(Veh)
Veh$VehManuf <- gsub('.{2}$', '', stri_extract(Veh$VehModel, regex="^([a-zA-Z]|[0-9]|[-])*\\ -"))
length(table(Veh$VehManuf))
table(Veh$VehManuf)
as.factor(Veh$VehManuf)
levels(Veh$VehManuf)
Veh$VehManuf <- as.factor(Veh$VehManuf)
levels(Veh$VehManuf)
lvl[which(table(Veh$VehManuf) > 10)]
lvl <- levels(Veh$VehManuf)
lvl[which(table(Veh$VehManuf) > 10)]
lvl[which(table(Veh$VehManuf) > 30)]
lvl[which(table(Veh$VehManuf) > 50)]
lvl[which(table(Veh$VehManuf) > 100)]
levels(Veh$VehManuf)[which(table(Veh$VehManuf) < 10)]
levels(Veh$VehManuf)[which(table(Veh$VehManuf) < 50)]
Veh$VehManuf <- gsub('.{2}$', '', stri_extract(Veh$VehModel, regex="^([a-zA-Z]|[0-9]|[-])*\\ -"))
Veh$VehManuf <- as.factor(Veh$VehManuf)
lvl <- levels(Veh$VehManuf)
lvl[which(table(Veh$VehManuf) < 50)] <- "Other"
levels(Veh$VehManuf) <- lvl
levels(Veh$VehManuf)
Table(Veh$VehManuf)
table(Veh$VehManuf)
ggplot(VehClaimOnly, aes(x=Area, y=LogClaim)) +
geom_boxplot() +
ylab("Logarithme des réclamations") +
coord_flip()
ggplot(VehClaimOnly, aes(x=VehManuf, y=LogClaim)) +
geom_boxplot() +
ylab("Logarithme des réclamations") +
coord_flip()
### Liste des paquetages
liste.paquetage <- c("ggplot2", "CASdatasets", "mice")
### On installe les paquetages de la liste qu'on a pas déjà
inst <- liste.paquetage %in% installed.packages()
if(length(liste.paquetage[!inst]) > 0) install.packages(liste.paquetage[!inst])
lapply(liste.paquetage, require, character.only = TRUE)
data(brvehins1a)
Veh <- brvehins1a
Veh$ClaimNb <- Veh$ClaimNbRob + Veh$ClaimNbPartColl + Veh$ClaimNbTotColl + Veh$ClaimNbFire + Veh$ClaimNbOther
Veh$ClaimAmount <- Veh$ClaimAmountRob + Veh$ClaimAmountPartColl + Veh$ClaimAmountTotColl + Veh$ClaimAmountFire + Veh$ClaimAmountOther
# Ajustement des niveaux
levels(Veh$DrivAge) <- levels(Veh$DrivAge)[c(2, 3, 4, 5, 1)]
Veh$VehManuf <- gsub('.{2}$', '', stri_extract(Veh$VehModel, regex="^([a-zA-Z]|[0-9]|[-])*\\ -"))
Veh$VehManuf <- as.factor(Veh$VehManuf)
lvl <- levels(Veh$VehManuf)
lvl[which(table(Veh$VehManuf) < 50)] <- "Other"
levels(Veh$VehManuf) <- lvl
Veh <- Veh[Veh$VehYear > 1900,]
Veh <- Veh[-8] #retirer StateAb du jeu de données
Veh <- Veh[Veh$VehYear > 1900,]
Veh <- Veh[-8] #retirer StateAb du jeu de données
data(brvehins1a)
Veh <- brvehins1a
Veh$ClaimNb <- Veh$ClaimNbRob + Veh$ClaimNbPartColl + Veh$ClaimNbTotColl + Veh$ClaimNbFire + Veh$ClaimNbOther
Veh$ClaimAmount <- Veh$ClaimAmountRob + Veh$ClaimAmountPartColl + Veh$ClaimAmountTotColl + Veh$ClaimAmountFire + Veh$ClaimAmountOther
# Ajustement des niveaux
levels(Veh$DrivAge) <- levels(Veh$DrivAge)[c(2, 3, 4, 5, 1)]
Veh$VehManuf <- gsub('.{2}$', '', stri_extract(Veh$VehModel, regex="^([a-zA-Z]|[0-9]|[-])*\\ -"))
Veh$VehManuf <- as.factor(Veh$VehManuf)
lvl <- levels(Veh$VehManuf)
lvl[which(table(Veh$VehManuf) < 50)] <- "Other"
levels(Veh$VehManuf) <- lvl
Veh <- Veh[Veh$VehYear > 1900,]
Veh <- Veh[-8] #retirer StateAb du jeu de données
## Création d'une nouvelle base de donnée pour l'analyse exploratoire
VehClaimOnly <- Veh[Veh$ClaimAmount > 0, ]
VehClaimOnly$LogClaim <- log(VehClaimOnly$ClaimAmount)
ggplot(VehClaimOnly, aes(x=LogClaim))+
geom_histogram()
ggplot(VehClaimOnly, aes(x=Gender, y=LogClaim)) +
geom_boxplot() +
ylab("Logarithme des réclamations")
ggplot(VehClaimOnly, aes(x=DrivAge, y=LogClaim)) +
geom_boxplot() +
ylab("Logarithme des réclamations")
ggplot(VehClaimOnly, aes(x=VehYear, y=LogClaim)) +
geom_point(alpha = 0.3) +
ylab("Logarithme des réclamations")
ggplot(VehClaimOnly, aes(x=VehManuf, y=LogClaim)) +
geom_boxplot() +
ylab("Logarithme des réclamations") +
coord_flip()
Veh$VehManuf <- gsub('.{2}$', '', stri_extract(Veh$VehModel, regex="^([a-zA-Z]|[0-9]|[-])*\\ -"))
Veh$VehManuf <- as.factor(Veh$VehManuf)
lvl <- levels(Veh$VehManuf)
lvl[which(table(Veh$VehManuf) < 200)] <- "Other"
levels(Veh$VehManuf) <- lvl
## Création d'une nouvelle base de donnée pour l'analyse exploratoire
VehClaimOnly <- Veh[Veh$ClaimAmount > 0, ]
VehClaimOnly$LogClaim <- log(VehClaimOnly$ClaimAmount)
ggplot(VehClaimOnly, aes(x=VehManuf, y=LogClaim)) +
geom_boxplot() +
ylab("Logarithme des réclamations") +
coord_flip()
table(Veh$VehManuf)
VehManuf <- Veh$VehManuf
lvl2 <- levels(Veh$VehManuf)
lvl2[which(table(Veh$VehManuf) < 10000)] <- "Other"
levels(VehManuf) <- lvl2
levels(VehManuf)
VehManufGraph <- Veh$VehManuf
lvl2 <- levels(Veh$VehManuf)
lvl2[which(table(Veh$VehManuf) < 10000)] <- "Other"
levels(VehManufGraph) <- lvl2
ggplot(VehClaimOnly, aes(x=VehManufGraph, y=LogClaim)) +
geom_boxplot() +
ylab("Logarithme des réclamations") +
coord_flip()
VehManufGraph
length(VehManufGraph)
VehManufGraph <- VehClaimOnly$VehManuf
lvl2 <- levels(VehClaimOnly$VehManuf)
lvl2[which(table(VehClaimOnly$VehManuf) < 10000)] <- "Other"
levels(VehManufGraph) <- lvl2
ggplot(VehClaimOnly, aes(x=VehManufGraph, y=LogClaim)) +
geom_boxplot() +
ylab("Logarithme des réclamations") +
coord_flip()
ggplot(VehClaimOnly, aes(x=VehManufGraph, y=LogClaim)) +
geom_boxplot() +
ylab("Logarithme des réclamations")
VehManufGraph <- VehClaimOnly$VehManuf
lvl2 <- levels(VehClaimOnly$VehManuf)
lvl2[which(table(VehClaimOnly$VehManuf) < 1000)] <- "Other"
levels(VehManufGraph) <- lvl2
ggplot(VehClaimOnly, aes(x=VehManufGraph, y=LogClaim)) +
geom_boxplot() +
ylab("Logarithme des réclamations")
ggplot(VehClaimOnly, aes(x=VehManufGraph, y=LogClaim)) +
geom_boxplot() +
ylab("Logarithme des réclamations") +
coord_flip()
data(brvehins1a)
Veh <- brvehins1a
Veh$ClaimNb <- Veh$ClaimNbRob + Veh$ClaimNbPartColl + Veh$ClaimNbTotColl + Veh$ClaimNbFire + Veh$ClaimNbOther
Veh$ClaimAmount <- (Veh$ClaimAmountRob + Veh$ClaimAmountPartColl + Veh$ClaimAmountTotColl + Veh$ClaimAmountFire + Veh$ClaimAmountOther)/Veh$ExposTotal
# Ajustement des niveaux
levels(Veh$DrivAge) <- levels(Veh$DrivAge)[c(2, 3, 4, 5, 1)]
Veh$VehManuf <- gsub('.{2}$', '', stri_extract(Veh$VehModel, regex="^([a-zA-Z]|[0-9]|[-])*\\ -"))
Veh$VehManuf <- as.factor(Veh$VehManuf)
lvl <- levels(Veh$VehManuf)
lvl[which(table(Veh$VehManuf) < 100)] <- "Other"
levels(Veh$VehManuf) <- lvl
Veh <- Veh[Veh$VehYear > 1900,]
Veh <- Veh[-8] #retirer StateAb du jeu de données
## Création d'une nouvelle base de donnée pour l'analyse exploratoire
VehClaimOnly <- Veh[Veh$ClaimAmount > 0, ]
VehClaimOnly$LogClaim <- log(VehClaimOnly$ClaimAmount)
ggplot(VehClaimOnly, aes(x=LogClaim))+
geom_histogram()
sum(Veh$ExposTotal == 0)
sum(na.omit(Veh$ExposTotal) == 0)
data(brvehins1a)
Veh <- brvehins1a
Veh$ClaimNb <- Veh$ClaimNbRob + Veh$ClaimNbPartColl + Veh$ClaimNbTotColl + Veh$ClaimNbFire + Veh$ClaimNbOther
Veh$ClaimAmount <- (Veh$ClaimAmountRob + Veh$ClaimAmountPartColl + Veh$ClaimAmountTotColl + Veh$ClaimAmountFire + Veh$ClaimAmountOther)/Veh$ExposTotal
# Ajustement des niveaux
levels(Veh$DrivAge) <- levels(Veh$DrivAge)[c(2, 3, 4, 5, 1)]
Veh$VehManuf <- gsub('.{2}$', '', stri_extract(Veh$VehModel, regex="^([a-zA-Z]|[0-9]|[-])*\\ -"))
Veh$VehManuf <- as.factor(Veh$VehManuf)
lvl <- levels(Veh$VehManuf)
lvl[which(table(Veh$VehManuf) < 100)] <- "Other"
levels(Veh$VehManuf) <- lvl
Veh <- Veh[Veh$VehYear > 1900,]
Veh <- Veh[-8] #retirer StateAb du jeu de données
## Création d'une nouvelle base de donnée pour l'analyse exploratoire
VehClaimOnly <- Veh[Veh$ClaimAmount > 0, ]
VehClaimOnly$LogClaim <- log(VehClaimOnly$ClaimAmount)
5/0
View(Veh)
View(Veh)
View(Veh)
ggplot(VehClaimOnly, aes(x=LogClaim))+
geom_histogram()
ggplot(VehClaimOnly, aes(x=Gender, y=LogClaim)) +
geom_boxplot() +
ylab("Logarithme des réclamations")
ggplot(VehClaimOnly, aes(x=DrivAge, y=LogClaim)) +
geom_boxplot() +
ylab("Logarithme des réclamations")
ggplot(VehClaimOnly, aes(x=VehYear, y=LogClaim)) +
geom_point(alpha = 0.3) +
ylab("Logarithme des réclamations")
VehManufGraph <- VehClaimOnly$VehManuf
lvl2 <- levels(VehClaimOnly$VehManuf)
lvl2[which(table(VehClaimOnly$VehManuf) < 1000)] <- "Other"
levels(VehManufGraph) <- lvl2
ggplot(VehClaimOnly, aes(x=VehManufGraph, y=LogClaim)) +
geom_boxplot() +
ylab("Logarithme des réclamations") +
coord_flip()
data(brvehins1a)
Veh <- brvehins1a
Veh$ClaimNb <- Veh$ClaimNbRob + Veh$ClaimNbPartColl + Veh$ClaimNbTotColl + Veh$ClaimNbFire + Veh$ClaimNbOther
Veh$ClaimAmount <- (Veh$ClaimAmountRob + Veh$ClaimAmountPartColl + Veh$ClaimAmountTotColl + Veh$ClaimAmountFire + Veh$ClaimAmountOther)/Veh$ExposTotal
# Ajustement des niveaux
levels(Veh$DrivAge) <- levels(Veh$DrivAge)[c(2, 3, 4, 5, 1)]
Veh$VehManuf <- gsub('.{2}$', '', stri_extract(Veh$VehModel, regex="^([a-zA-Z]|[0-9]|[-])*\\ -"))
Veh$VehManuf <- as.factor(Veh$VehManuf)
lvl <- levels(Veh$VehManuf)
lvl[which(table(Veh$VehManuf) < 100)] <- "Other"
levels(Veh$VehManuf) <- lvl
Veh <- Veh[Veh$VehYear > 1900,]
Veh <- Veh[-8] #retirer StateAb du jeu de données
## Création d'une nouvelle base de donnée pour l'analyse exploratoire
VehClaimOnly <- Veh[Veh$ClaimAmount > 0 & Veh$ClaimAmount < 99999999999, ]
VehClaimOnly$LogClaim <- log(VehClaimOnly$ClaimAmount)
ggplot(VehClaimOnly, aes(x=LogClaim))+
geom_histogram()
ggplot(VehClaimOnly, aes(x=Gender, y=LogClaim)) +
geom_boxplot() +
ylab("Logarithme des réclamations")
ggplot(VehClaimOnly, aes(x=DrivAge, y=LogClaim)) +
geom_boxplot() +
ylab("Logarithme des réclamations")
ggplot(VehClaimOnly, aes(x=VehYear, y=LogClaim)) +
geom_point(alpha = 0.3) +
ylab("Logarithme des réclamations")
ggplot(VehClaimOnly, aes(x=VehYear, y=LogClaim)) +
geom_point(alpha = 0.3) +
ylab("Logarithme des réclamations") +
geom_smooth()
VehManufGraph <- VehClaimOnly$VehManuf
lvl2 <- levels(VehClaimOnly$VehManuf)
lvl2[which(table(VehClaimOnly$VehManuf) < 1000)] <- "Other"
levels(VehManufGraph) <- lvl2
ggplot(VehClaimOnly, aes(x=VehManufGraph, y=LogClaim)) +
geom_boxplot() +
ylab("Logarithme des réclamations") +
coord_flip()
VehManufGraph <- VehClaimOnly$VehManuf
lvl2 <- levels(VehClaimOnly$VehManuf)
lvl2[which(table(VehClaimOnly$VehManuf) < 500)] <- "Other"
levels(VehManufGraph) <- lvl2
ggplot(VehClaimOnly, aes(x=VehManufGraph, y=LogClaim)) +
geom_boxplot() +
ylab("Logarithme des réclamations") +
coord_flip()
ggplot(VehClaimOnly, aes(x=Area, y=LogClaim)) +
geom_boxplot() +
ylab("Logarithme des réclamations") +
coord_flip()
table(VehClaimOnly$Area)
AreaGraph <- VehClaimOnly$Area
lvl3 <- levels(VehClaimOnly$Area)
lvl3[which(table(VehClaimOnly$Area) < 1000)] <- "Other"
levels(AreaGraph) <- lvl2
AreaGraph <- VehClaimOnly$Area
lvl3 <- levels(VehClaimOnly$Area)
lvl3[which(table(VehClaimOnly$Area) < 1000)] <- "Other"
levels(AreaGraph) <- lvl3
ggplot(VehClaimOnly, aes(x=AreaGraph, y=LogClaim)) +
geom_boxplot() +
ylab("Logarithme des réclamations") +
coord_flip()
table(VehClaimOnly$Area)
AreaGraph <- VehClaimOnly$Area
lvl3 <- levels(VehClaimOnly$Area)
lvl3[which(table(VehClaimOnly$Area) < 1000)] <- "Other"
levels(AreaGraph) <- lvl3
ggplot(VehClaimOnly, aes(x=AreaGraph, y=LogClaim)) +
geom_boxplot() +
ylab("Logarithme des réclamations") +
coord_flip()
table(VehClaimOnly$Area) < 1000)
table(VehClaimOnly$Area) < 1000
which(table(VehClaimOnly$Area) < 1000)
which(table(VehClaimOnly$Area) < 30)
table(VehClaimOnly$Area)
table(VehClaimOnly$Area) < 1000
which(table(VehClaimOnly$Area) < 1000)
AreaGraph <- VehClaimOnly$Area
lvl3 <- levels(VehClaimOnly$Area)
lvl3[which(table(VehClaimOnly$Area) < 1000)] <- "Other"
levels(AreaGraph) <- lvl3
ggplot(VehClaimOnly, aes(x=AreaGraph, y=LogClaim)) +
geom_boxplot() +
ylab("Logarithme des réclamations") +
coord_flip()
AreaGraph <- VehClaimOnly$Area
lvl3 <- levels(VehClaimOnly$Area)
lvl3[which(table(VehClaimOnly$Area) < 5000)] <- "Other"
levels(AreaGraph) <- lvl3
ggplot(VehClaimOnly, aes(x=AreaGraph, y=LogClaim)) +
geom_boxplot() +
ylab("Logarithme des réclamations") +
coord_flip()
AreaGraph <- VehClaimOnly$Area
lvl3 <- levels(VehClaimOnly$Area)
lvl3[which(table(VehClaimOnly$Area) < 2000)] <- "Other"
levels(AreaGraph) <- lvl3
ggplot(VehClaimOnly, aes(x=AreaGraph, y=LogClaim)) +
geom_boxplot() +
ylab("Logarithme des réclamations") +
coord_flip()
AreaGraph <- VehClaimOnly$Area
lvl3 <- levels(VehClaimOnly$Area)
lvl3[which(table(VehClaimOnly$Area) < 2000 | is.na(VehClaimOnly$Area))] <- "Other"
lvl3 == NA
lvl3[lvl3 == "NA"]
lvl3
AreaGraph <- VehClaimOnly$Area
lvl3 <- levels(VehClaimOnly$Area)
lvl3[which(table(VehClaimOnly$Area) < 2000)] <- "Other"
levels(AreaGraph) <- lvl3
ggplot(VehClaimOnly, aes(x=AreaGraph, y=LogClaim)) +
geom_boxplot() +
ylab("Logarithme des réclamations") +
coord_flip()
ggplot(VehClaimOnly, aes(x=State, y=LogClaim)) +
geom_boxplot() +
ylab("Logarithme des réclamations") +
coord_flip()
StateGraph <- VehClaimOnly$State
lvl4 <- levels(VehClaimOnly$State)
lvl4[which(table(VehClaimOnly$State) < 2000)] <- "Other"
levels(StateGraph) <- lvl4
ggplot(VehClaimOnly, aes(x=StateGraph, y=LogClaim)) +
geom_boxplot() +
ylab("Logarithme des réclamations") +
coord_flip()
View(Veh)
View(Veh)
md.pattern(Veh, rotate.names = T)
sum(is.na(Veh$VehModel))
sum(is.na(Veh$VehManuf))
Veh$VehModel[is.na(Veh$VehManuf)]
data(brvehins1a)
Veh <- brvehins1a
Veh$ClaimNb <- Veh$ClaimNbRob + Veh$ClaimNbPartColl + Veh$ClaimNbTotColl + Veh$ClaimNbFire + Veh$ClaimNbOther
Veh$ClaimAmount <- (Veh$ClaimAmountRob + Veh$ClaimAmountPartColl + Veh$ClaimAmountTotColl + Veh$ClaimAmountFire + Veh$ClaimAmountOther)/Veh$ExposTotal
# Ajustement des niveaux
levels(Veh$DrivAge) <- levels(Veh$DrivAge)[c(2, 3, 4, 5, 1)]
data(brvehins1a)
Veh <- brvehins1a
Veh$ClaimNb <- Veh$ClaimNbRob + Veh$ClaimNbPartColl + Veh$ClaimNbTotColl + Veh$ClaimNbFire + Veh$ClaimNbOther
Veh$ClaimAmount <- (Veh$ClaimAmountRob + Veh$ClaimAmountPartColl + Veh$ClaimAmountTotColl + Veh$ClaimAmountFire + Veh$ClaimAmountOther)/Veh$ExposTotal
# Ajustement des niveaux
levels(Veh$DrivAge) <- levels(Veh$DrivAge)[c(2, 3, 4, 5, 1)]
Veh$VehManuf <- gsub('.{2}$', '', stri_extract(Veh$VehModel, regex="^([a-zA-Z]|[0-9]|[-]|[ ])* -"))
Veh$VehManuf <- as.factor(Veh$VehManuf)
lvl <- levels(Veh$VehManuf)
lvl[which(table(Veh$VehManuf) < 100)] <- "Other"
levels(Veh$VehManuf) <- lvl
Veh <- Veh[Veh$VehYear > 1900,]
Veh <- Veh[-8] #retirer StateAb du jeu de données
## Création d'une nouvelle base de donnée pour l'analyse exploratoire
VehClaimOnly <- Veh[Veh$ClaimAmount > 0 & Veh$ClaimAmount < 99999999999, ]
VehClaimOnly$LogClaim <- log(VehClaimOnly$ClaimAmount)
ggplot(VehClaimOnly, aes(x=LogClaim))+
geom_histogram()
sum(is.na(Veh$VehModel))
sum(is.na(Veh$VehManuf))
Veh$VehModel[is.na(Veh$VehManuf)]
Veh$VehModel
Veh$VehModel == "Outros"
Veh$VehManuf <- gsub('.{2}$', '', stri_extract(Veh$VehModel, regex="^([a-zA-Z]|[0-9]|[-]|[ ])* -"))
Veh$VehManuf[Veh$VehModel == "Outros"] <- "Other"
Veh$VehManuf <- as.factor(Veh$VehManuf)
lvl <- levels(Veh$VehManuf)
lvl[which(table(Veh$VehManuf) < 100)] <- "Other"
levels(Veh$VehManuf) <- lvl
sum(is.na(Veh$VehModel))
sum(is.na(Veh$VehManuf))
